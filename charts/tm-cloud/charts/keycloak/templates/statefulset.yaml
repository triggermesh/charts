apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "keycloak.fullname" . }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: chmod
        image: busybox
        command:
        - /bin/chown
        - -R
        - "1000"
        - /opt/jboss/keycloak/standalone/data
        volumeMounts:
        - name: datadir
          mountPath: /opt/jboss/keycloak/standalone/data
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/opt/jboss/tools/docker-entrypoint.sh"]
        args: ["-b", "0.0.0.0",
          "-Dkeycloak.profile.feature.upload_scripts=enabled",
          "-Dkeycloak.import=/opt/realm-import/triggermesh-realm.json"]
        env:
        - name: KEYCLOAK_FRONTEND_URL
{{- if .Values.ingress.enabled }}
          value: http{{ if .Values.ingress.tls.enabled }}s{{ end }}://{{ .Values.ingress.hostname }}/auth
{{- else }}
          value: http://localhost:8080/auth
{{- end }}
        - name: DB_VENDOR
          value: "h2"
        - name: KEYCLOAK_USER
          value: {{ .Values.admin.username }}
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "keycloak.fullname" . }}
              key: admin_password
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: datadir
          mountPath: /opt/jboss/keycloak/standalone/data
        - name: realm-import
          mountPath: /opt/realm-import
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: datadir
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: datadir
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: realm-import
          configMap:
            name: {{ include "keycloak.fullname" . }}
      terminationGracePeriodSeconds: 60
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      labels:
        {{- include "keycloak.labels" . | nindent 10 }}
    {{- if .Values.persistence.annotations }}
      annotations:
    {{ toYaml .Values.persistence.annotations | indent 10 }}
    {{- end }}
    spec:
      accessModes:
      - {{ .Values.persistence.accessMode }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
{{- end }}
